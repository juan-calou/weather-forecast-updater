{"version":3,"sources":["components/Layout.js","components/firebase.js","pages/StorePredictions.js","pages/NotFound.js","components/App.js","index.js"],"names":["Layout","props","Fragment","className","children","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","this","auth","db","firestore","email","password","signInWithEmailAndPassword","signOut","KEY","StorePredictions","formatDate","d","date","Date","dd","getDate","mm","getMonth","getFullYear","getHours","axios","get","then","res","today","getTime","prediction","city","datenice","forecast","data","firebase","collection","add","catch","error","console","log","Component","NotFound","App","BrowserRouter","Switch","Route","exact","path","component","container","document","getElementById","ReactDOM","render"],"mappings":"sRAeeA,MAbf,SAAgBC,GAEd,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,2BACZF,EAAMG,a,gECJXC,G,YAAS,CACbC,OAAQC,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmBL,eACnBM,MAAON,8CAmBM,M,WAfb,aAAe,oBACXO,IAAIC,cAAcV,GAClBW,KAAKC,KAAOH,IAAIG,OAChBD,KAAKE,GAAKJ,IAAIK,Y,kDAGZC,EAAOC,GACX,OAAOL,KAAKC,KAAKK,2BAA2BF,EAAOC,K,+BAInD,OAAOL,KAAKC,KAAKM,c,MCtBfC,EAAMjB,mCAISkB,E,kDAEnB,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAGRyB,WAAa,SAAAC,GACX,IAAIC,EAAO,IAAIC,KAAS,IAAJF,GAChBG,EAAKF,EAAKG,UACVC,EAAKJ,EAAKK,WAAW,EAMzB,OAHGH,EAAK,KAAIA,EAAK,IAAMA,GACpBE,EAAK,KAAIA,EAAK,IAAMA,GAEhBA,EAAK,IAAMF,EAAK,IALZF,EAAKM,cAKoB,MAJ3BN,EAAKO,YATG,E,gEAgBE,IAAD,OAElBC,IAAMC,IAAK,qEAAiFb,GACzFc,MAAK,SAAAC,GACJ,IAAMC,GAAQ,IAAIX,MAAOY,UAEnBC,EAAa,CACjBC,KA5BQpC,UA6BRqB,KAAMY,EACNI,SAJe,EAAKlB,WAAWc,EAAQ,KAKvCK,SAAUN,EAAIO,MAGhBC,EAAS7B,GAAG8B,WAAW,eAAeC,IAAIP,MAE3CQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAGhBf,IAAMC,IAAK,qEAA4Eb,GACpFc,MAAK,SAAAC,GACJ,IAAMC,GAAQ,IAAIX,MAAOY,UAEnBC,EAAa,CACjBC,KA5CGpC,UA6CHqB,KAAMY,EACNI,SAJe,EAAKlB,WAAWc,EAAQ,KAKvCK,SAAUN,EAAIO,MAGhBC,EAAS7B,GAAG8B,WAAW,eAAeC,IAAIP,MAE3CQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAMhB,OACE,0C,GA1DwCG,aCD/BC,MAJf,WACE,OAAO,+CCgBMC,MAbf,WACE,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWrC,IACtD,kBAACkC,EAAA,EAAD,CAAOG,UAAWP,QCNtBQ,EAAYC,SAASC,eAAe,OAE1CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.c096d66d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Layout(props) {\n\n  return (\n    <React.Fragment>\n      <div className=\"container-fluid\">\n        <div className=\"container-fluid content\">\n          {props.children}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Layout;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"weather-forecast-checker.firebaseapp.com\",\n  databaseURL: \"https://weather-forecast-checker.firebaseio.com\",\n  projectId: \"weather-forecast-checker\",\n  storageBucket: \"weather-forecast-checker.appspot.com\",\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\nclass Firebase {\n  constructor() {\n      app.initializeApp(config);\n      this.auth = app.auth();\n      this.db = app.firestore();\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n}\n\nexport default new Firebase();\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport firebase from '../components/firebase';\n\nconst KEY = process.env.REACT_APP_API_KEY;\nconst PERGAMINO = process.env.REACT_APP_PERGAMINO_ID;\nconst BSAS = process.env.REACT_APP_BUENOS_AIRES_ID\n\nexport default class StorePredictions extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  formatDate = d => {\n    var date = new Date(d * 1000);\n    var dd = date.getDate();\n    var mm = date.getMonth()+1;\n    var yyyy = date.getFullYear();\n    var hh = date.getHours();\n    if(dd < 10) dd = '0' + dd;\n    if(mm < 10) mm = '0' + mm;\n\n    return(mm + '/' + dd + '/' + yyyy + ' - ' + hh);\n  }\n\n  componentDidMount() {\n\n    axios.get( 'https://api.openweathermap.org/data/2.5/forecast?id=' + PERGAMINO + '&appid=' + KEY)\n      .then(res => {\n        const today = new Date().getTime();\n        const datenice = this.formatDate(today / 1000);\n        const prediction = {\n          city: PERGAMINO,\n          date: today,\n          datenice,\n          forecast: res.data\n        };\n    \n        firebase.db.collection('predictions').add(prediction);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    axios.get( 'https://api.openweathermap.org/data/2.5/forecast?id=' + BSAS + '&appid=' + KEY)\n      .then(res => {\n        const today = new Date().getTime();\n        const datenice = this.formatDate(today / 1000);\n        const prediction = {\n          city: BSAS,\n          date: today,\n          datenice,\n          forecast: res.data\n        };\n    \n        firebase.db.collection('predictions').add(prediction);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    \n  }\n\n  render() {\n    return (\n      <div>\n        Done!\n      </div>\n    );\n  }\n}\n","import React from 'react';\n//import Navbar from '../components/Navbar';\n\nfunction NotFound() {\n  return <h1>404: Not Found</h1>;\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Layout from './Layout';\nimport StorePredictions from '../pages/StorePredictions';\nimport NotFound from '../pages/NotFound';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/storepredictionsbyurl\" component={StorePredictions} />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './global.css';\nimport App from './components/App';\n\nconst container = document.getElementById('app');\n\nReactDOM.render(<App />, container);\n"],"sourceRoot":""}